/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.66
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The OhlcV3 model module.
 * @module model/OhlcV3
 * @version v0
 */
export class OhlcV3 {
  /**
   * Constructs a new <code>OhlcV3</code>.
   * @alias module:model/OhlcV3
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>OhlcV3</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OhlcV3} obj Optional instance to populate.
   * @return {module:model/OhlcV3} The populated <code>OhlcV3</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new OhlcV3();
      if (data.hasOwnProperty('open'))
        obj.open = ApiClient.convertToType(data['open'], 'Number');
      if (data.hasOwnProperty('high'))
        obj.high = ApiClient.convertToType(data['high'], 'Number');
      if (data.hasOwnProperty('low'))
        obj.low = ApiClient.convertToType(data['low'], 'Number');
      if (data.hasOwnProperty('close'))
        obj.close = ApiClient.convertToType(data['close'], 'Number');
      if (data.hasOwnProperty('volume'))
        obj.volume = ApiClient.convertToType(data['volume'], 'Number');
      if (data.hasOwnProperty('ts'))
        obj.ts = ApiClient.convertToType(data['ts'], 'Number');
    }
    return obj;
  }
}

/**
 * The open price of the trading session
 * @member {Number} open
 */
OhlcV3.prototype.open = undefined;

/**
 * The high price of the trading session
 * @member {Number} high
 */
OhlcV3.prototype.high = undefined;

/**
 * The low price of the trading session
 * @member {Number} low
 */
OhlcV3.prototype.low = undefined;

/**
 * The close price of the symbol from the previous session of trading
 * @member {Number} close
 */
OhlcV3.prototype.close = undefined;

/**
 * The volume of the symbol traded in the session
 * @member {Number} volume
 */
OhlcV3.prototype.volume = undefined;

/**
 * Starting timestamp of candle
 * @member {Number} ts
 */
OhlcV3.prototype.ts = undefined;

